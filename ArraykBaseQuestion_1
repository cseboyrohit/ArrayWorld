// Find the maximum element in an array:

// using for Anonymous Array
/* public class ArrayBaseQuestion {

    static void sum(int[]arr) {
        int max = arr[0];
        for (int element : arr) {
            if (max < element) {//
                max = element;

            }
        }
        System.out.println(max);
    }
      public static void main(String[]args){

          sum(new int[]{10,20,30,40,50,60});

      }
}

 */

    //Calculate the sum of elements in an array:
    // using Anonymous Array
  /*  public class ArrayBaseQuestion {

        static void calSum(int[]arr){
            int sum=0;
             for(int element : arr){
                 sum += element;
             }
            System.out.println(sum);
        }
        public static void main(String[] args) {
            calSum(new int[]{10,20,30,40,50,60});

        }
    }

   */

/*
import java.util.Scanner;

//Search for an element in an array:
       public class ArrayBaseQuestion {

        static void findelement(int[]arr) {
            Scanner sc=new Scanner(System.in);
            System.out.println("Enter array element");
            int num = sc.nextInt();
            boolean flag = false;
            for (int a : arr) {
                if (num == a) {
                    flag = true;
                    break;
                }

            }
            if (flag) {
                System.out.println(" yes element present in an array");

            } else {
                System.out.println(" array not present in array");

            }
        }

           public static void main(String[] args) {
               findelement(new int[]{10,20,30,40,50,60});
           }
       }

 */

/*
             // 2nd method
public class ArrayBaseQuestion {

    public static boolean containsElement(int[] arr, int target) {
        for (int num : arr) {
            if (num == target) {
                return true; // Element found
            }
        }
        return false; // Element not found
    }

    public static void main(String[] args) {
        int[] array = {10, 20, 30, 40, 50};
        int target = 30;

        if (containsElement(array, target)) {
            System.out.println("Array contains the element " + target);
        } else {
            System.out.println("Array does not contain the element " + target);
        }
    }
}
 */


      /* // Reverse an Array: Write a program to reverse the elements of an array

        public class ArrayBaseQuestion {

            public static void reverseArray(int[]arr){
               int start=0;
               int end=arr.length-1;

               while(start < end){
                   // Swap elements at start and end indices
                   int temp=arr[start];
                   arr[start]=arr[end];
                   arr[end]=temp;
                   start++;
                   end--;
               }
               for(int element: arr){
                   System.out.print(element +" ");
               }
            }

            public static void main(String[] args) {
                reverseArray(new int[]{10,20,30,40,50,60});

                //  you can use this method
//                int[] array = {10, 20, 30, 40, 50, 60};
//                reverseArray(array);
//                // Print the reversed array
//                for (int num : array) {
//                    System.out.print(num + " ");
//                }

            }
        }

       */

             //Find the Average of Array Elements

        public class ArrayBaseQuestion {
            public static double findAverage(int[] arr) {
                int sum = 0;
                for (int element : arr) {
                    sum += element;
                }
                double result = (double) sum / arr.length; // Cast one operand to double for correct division
                return result;
            }
                     // you can try this code
//                public static void print() {
//                    double average = findAverage(new int[]{10, 20, 30, 40, 50, 50, 60, 70, 80});
//                    System.out.println("Average of the array elements: " + average);
//                }


            public static void main(String[] args) {
                double average = findAverage(new int[]{10, 20, 30, 40, 50, 50, 60, 70, 80});
                System.out.println("Average of the array elements: " + average);

 //               print();  // call static method
            }
        }

 // lecture `10` video solve question love 
/*
       public class ArrayBaseQuestion {
          public static void swapAlternate(int[]arr){
             for(int i=0; i<arr.length-1; i +=2){   // increase by 2 because operation after 2 element
                 int temp= arr[i];
                 arr[i]=arr[i+1];
                 arr[i+1]=temp;
             }

             for(int element : arr){
                 System.out.print(element+" ");
             }
         }

         public static void main(String[] args) {
          swapAlternate(new int[]{1,2,3,4,5,6});

            }
         }

 */

     /* how to find the single value in an array that appears an odd number of times,
         denoted as (2m + 1) where m is an integer.*/
/*
          public class ArrayBaseQuestion {

              public static int findSingle(int[]arr){
                  int sum=0;
                  for(int element : arr){
                      sum = sum ^ element;  // using bitwise XOR operation.
                  }

                  return sum;
              }

              public static void main(String[] args) {
                 //int result= findSingle(new int[]{4, 3, 2, 4, 1, 3, 2, 1, 4});
                  int result= findSingle(new int[]{4, 3, 2, 4, 1, 3, 2, 1, 8});

                  System.out.println("The single value with odd occurrence is: "+result);

              }
          }

 */


/*
     // print the Duplicates vales leecode probleam
import java.util.Arrays;

public class ArrayBaseQuestion {
    public static void findDuplicates(int[] nums) {
           Arrays.sort(nums);
        boolean flag=false;
        for(int i=1; i<nums.length; i++){
            if(nums[i] == nums[i-1]){  // start from index 1
                if(!flag){
                    System.out.println("Duplicate values:");
                    flag=true;
                }
                System.out.println(nums[i]);
            }
        }
        if(!flag) {
            System.out.println("not Duplicate values:");
        }
    }

    public static void main(String[] args) {
        int[] arr = {1, 2, 3, 4, 2, 5, 6, 3};
          findDuplicates(arr);
    }
}

 */


